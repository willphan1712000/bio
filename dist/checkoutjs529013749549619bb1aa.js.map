{"version":3,"file":"checkoutjs529013749549619bb1aa.js","mappings":";;;;AAAA,uBAAuB,mMAAW;;AAElC,qDAAqD;AACrD,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oCAAoC;AACrD,6BAA6B,iCAAiC;AAC9D,KAAK;AACL,YAAY,eAAe;AAC3B;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,C","sources":["webpack://htdocs/./controllers/client/src/checkout.js"],"sourcesContent":["const publishableKey = process.env.STRIPE_PUBLISHABLE_KEY\n\nlet cart = JSON.parse(localStorage.getItem(\"cart\")); // get cart from local storage\nconst items = []; // items object will be sent over the server for processing\n\n// Check if there is a single checkout\nif(singleCheckout !== \"null\") {\n  cart = {}\n  cart[singleCheckout] = true\n}\n\n// for loop to make the items object complete\nfor(const key in cart) {\n  items.push({\n    id: key,\n    quantity: cart[key] ? 1 : cart[key],\n  })\n}\n\n// This is your test secret API key.\nconst stripe = Stripe(publishableKey);\n\ninitialize();\n\n// Create a Checkout Session\nasync function initialize() {\n  const fetchClientSecret = async () => {\n    const response = await fetch(\"/data/stripe/checkout.php\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ items, username, singleCheckout }),\n    });\n    const { clientSecret } = await response.json();\n    return clientSecret;\n  };\n\n  const checkout = await stripe.initEmbeddedCheckout({\n    fetchClientSecret,\n  });\n\n  // Mount Checkout\n  checkout.mount('#checkout');\n}"],"names":[],"sourceRoot":""}